/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2017. MIT licensed.
 */
!function(e,t,n,o){"use strict";function a(t){e(".wdw").hide(),e("#"+t).show()}function l(){var t=JSON.parse(localStorage.events);t.forEach(function(t){e("#event-listing tbody").append('<tr data-event-id="'+t.id+'">\t\t\t\t\t\t\t\t\t\t<td>'+t.name+"</td>\t\t\t\t\t\t\t\t\t\t<td>"+t.topic+"</td>\t\t\t\t\t\t\t\t\t\t<td>"+t.speaker+"</td>\t\t\t\t\t\t\t\t\t\t<td>"+t.date.day+" "+t.date.month+" "+t.date.year+"</td>\t\t\t\t\t\t\t\t\t\t<td>"+t.time_24h.hour+":"+t.time_24h.minute+'</td>\t\t\t\t\t\t\t\t\t\t<td>\t\t\t\t\t\t\t\t\t\t\t<i class="fa fa-pencil" id="edit-event-icon" aria-hidden="true"></i>\t\t\t\t\t\t\t\t\t\t\t<i class="fa fa-trash" id="delete-event-icon" aria-hidden="true"></i>\t\t\t\t\t\t\t\t\t\t</td>\t\t\t\t\t\t\t\t\t</tr>\t\t\t')})}function i(e,t,n,o){var a=e.toLowerCase(),l=t.toLowerCase(),i=l.includes(a);1==i?(console.log("Match made"),o.push(n)):console.log("False")}function s(){e("#linkRegister").fadeOut(500),e("#linkLogin").fadeOut(500),e("#linkLogout").fadeIn(500)}function c(){var e,t,o,a,l,i;for(e=n.getElementById("searchfront"),t=e.value.toUpperCase(),o=n.getElementById("effect-milo"),a=o.getElementsByTagName("location"),console.log(a),i=0;i<a.length;i++)l=a[i].getElementById("span")[0],console.log(l),console.log(a[i]+a),l&&(l.innerHTML.toUpperCase().indexOf(t)>-1?(a[i].style.display="",console.log(a[i])):(a[i].style.display="none",console.log(a[i])))}function d(){var e,t,o,a,l,i;for(e=n.getElementById("myInput"),t=e.value.toUpperCase(),o=n.getElementById("myTable"),a=o.getElementsByTagName("tr"),i=0;i<a.length;i++)l=a[i].getElementsByTagName("td")[0],l&&(l.innerHTML.toUpperCase().indexOf(t)>-1?a[i].style.display="":a[i].style.display="none")}function r(){var t=e("#inputpostimg").val(),n=e("#inputposttitel").val(),o=e("#inputpostdesc").val(),a=e("#inputpostlocation").val(),l={postimageurl:t,posttitel:n,postdesc:o,postloc:a};console.log(l),swal({title:"Event Created!",text:"Dear Techie, Event has been succesfully scheduled",imageUrl:"https://pixabay.com/get/e837b50a2ff5053ed1534705fb0938c9bd22ffd41cb1134695f9c07da2/computer-1245714_1920.jpg",imageWidth:400,imageHeight:200,animation:!1})}function g(){var e={username:"username",password:"password"};localStorage.setItem("credentials",JSON.stringify(e))}var v=[];if(localStorage.sEvents){var p=localStorage.sEvents;v=JSON.parse(p)}e(function(){});for(var u=0;u<v.length;u++)e("#lblEvents").append('<tr><th scope="row"><h4>'+v[u].id+"</h4></th><td><h4>"+v[u].name+'</h4></td><td><i class="fa fa-trash" aria-hidden="true"></i></td></tr>');if(e("#postbtn").on("click",function(){var t=(new Date).getTime(),n=e("#inputpostimg").val(),o=e("#inputpostevent").val(),l=e("#inputpostdesc").val(),i=e("#inputpostlocation").val(),s="link";e("#lblEvents").append("<tr><td>"+o+"</td><td>"+i+"</td><td>"+t+"</td><td>"+s+'</td><td><i class="fa fa-trash" aria-hidden="true"></i></td></tr>'),a("wdw-calendar");var c={};c.id=(new Date).getTime(),c.imageUrl=n,c.postevent=o,c.PostDesc=l,c.sPostLocation=i,v.push(c);var d=JSON.stringify(v);localStorage.sEvents=d}),e("#lblEvents div").each(function(t){console.log(t+": "+e(this).text()),e(this).css}),e("#searchEvents").on("click",function(){var t=e("#searchfront").val(),n=t.split(" "),o=[];console.log(n);var a=JSON.parse(localStorage.events);n.forEach(function(e){var t=e;a.forEach(function(e){var n=e.name,a=(e.topic,e.level),l=e.speaker_organization;e.location;i(t,n,e,o),i(t,a,e,o),i(t,l,e,o)})}),console.log(o);var l=o.filter(function(e,t,n){return t==n.indexOf(e)});console.log(l),e("#event-listing").empty();var s=l.length/3;console.log("The base number is: "+s),l.forEach(function(t){var n=t.topic;console.log(l.length),console.log(t.name),e("#event-listing").append('            <div class="event-thirds" data-event-id="'+t.id+'">              <div>                <h1>'+t.name+"</h1>                <h2>"+n+"</h2>                <h5>"+t.date.day+"-"+t.date.month+"-"+t.date.year+"</h5>              </div>            </div>          ")})}),null==localStorage.events)console.log("localStorage.events is empty"),e.getJSON("assets/data/events.json").done(function(t){console.log(t);var n=JSON.stringify(t);localStorage.events=n,console.log("localStorage.events successfully populated");var o=localStorage.events,a=JSON.parse(o);a.forEach(function(t){if(a.indexOf(t)<=9){console.log("works");var n=t.topic;e("#event-listing").append('              <div class="event-thirds" data-event-id="'+t.id+'">                <div>                  <h1>'+t.name+"</h1>                  <h2>"+n+"</h2>                  <h5>"+t.date.day+"-"+t.date.month+"-"+t.date.year+"</h5>                </div>              </div>          ")}}),l()});else if(localStorage.events){console.log("localStorage.events has data");var f=localStorage.events,m=JSON.parse(f);m.forEach(function(t){if(m.indexOf(t)<=9){console.log("works");var n=t.topic;e("#event-listing").append('            <div class="event-thirds" data-event-id="'+t.id+'">              <div>                <h1>'+t.name+"</h1>                <h2>"+n+"</h2>                <h5>"+t.date.day+"-"+t.date.month+"-"+t.date.year+"</h5>              </div>            </div>        ")}}),l()}e(n).ready(function(){a("wdw-home"),e("#wdw-event-listing").fadeIn(500)}),e("#searchfront").keyup(function(){c()}),e("#myInput").keyup(function(){d()}),e(n).ready(function(){g()}),e("#loginbtn").on("click",function(){var t=JSON.parse(localStorage.getItem("credentials")),n=JSON.parse(localStorage.getItem("credentialsMember")),o=e("#inputusername").val(),l=e("#inputpassword").val();t.username===o&&t.password===l||n.username===o&&n.password===l?(console.log("Welcome Mr.   "+t.username),s(),e(".brand h1").text("HI "+t.username),swal("Welcome!","#Tekhus <3 Tech ","success"),a("wdw-index")):console.log("failed login")}),e("#memberbtn").on("click",function(){var t=e("#inputfnamereg").val(),n=e("#inputlnamereg").val(),o=e("#inputemailreg").val(),l=e("#inputlocationreg").val(),i=e("#inputusernamereg").val(),s=e("#inputpasswordreg").val(),c={fname:t,lname:n,email:o,location:l,usernam:i,password:s};localStorage.setItem("credentialsMember",JSON.stringify(c)),console.log("Local Storage store",c),a("wdw-login")}),e("#postbtn").on("click",function(){r(),console.log("post event")}),e("#linkLogin").on("click",function(){a("wdw-login"),console.log("Nav - login clicked")}),e("#linkHome").on("click",function(){a("wdw-home"),console.log("Nav - Home Clicked ")}),e("#linkEvents").on("click",function(){a("wdw-events"),console.log("Nav - Link Event")}),e("#linkNews").on("click",function(){a("wdw-news"),console.log("Nav - News clicked")}),e("#linkCalendar").on("click",function(){a("wdw-calendar"),console.log("Nav - Calendar clicked")}),e("#linkAllEvents").on("click",function(){a("wdw-all-events"),console.log("Nav - all events click")}),e("#btnpostevent").on("click",function(){a("wdw-post-event"),console.log("Postclicke")}),e("#postnewevent").on("click",function(){a("wdw-post-event"),console.log("Post new event clicked ")}),v.indexOf(this),e(".fa-fa-trash").click(function(){console.log("Trashed clicked",v,v[u],v.length),v.splice(1,1)}),e("#manage-events").on("click",function(){a("wdw-manage-events"),console.log("manage events clicked ")}),e("#manage-users").on("click",function(){a("wdw-manage-users"),console.log("manage users clicked ")}),e("#registermember").on("click",function(){a("wdw-index"),console.log("manage-members clicked")}),e("#linkpartnere").on("click",function(){a("wdw-partnere"),console.log("partner link clicked ")}),e(".fa-fa-trash").click(function(){e(this).parent().hide(),console.log("Trash delete clicked ")})}(jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
