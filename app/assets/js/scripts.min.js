/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2017. MIT licensed.
 */
!function(t,e,n,o){"use strict";function a(e){t(".wdw").hide(),t("#"+e).show()}function i(){var e=JSON.parse(localStorage.events);e.forEach(function(e){t("#event-listing tbody").append('<tr data-event-id="'+e.id+'">\t\t\t\t\t\t\t\t\t\t<td>'+e.name+"</td>\t\t\t\t\t\t\t\t\t\t<td>"+e.topic+"</td>\t\t\t\t\t\t\t\t\t\t<td>"+e.speaker+"</td>\t\t\t\t\t\t\t\t\t\t<td>"+e.date.day+" "+e.date.month+" "+e.date.year+"</td>\t\t\t\t\t\t\t\t\t\t<td>"+e.time_24h.hour+":"+e.time_24h.minute+'</td>\t\t\t\t\t\t\t\t\t\t<td>\t\t\t\t\t\t\t\t\t\t\t<i class="fa fa-pencil" id="edit-event-icon" aria-hidden="true"></i>\t\t\t\t\t\t\t\t\t\t\t<i class="fa fa-trash" id="delete-event-icon" aria-hidden="true"></i>\t\t\t\t\t\t\t\t\t\t</td>\t\t\t\t\t\t\t\t\t</tr>\t\t\t')})}function l(t,e,n,o){var a=t.toLowerCase(),i=e.toLowerCase(),l=i.includes(a);1==l?(console.log("Match made"),o.push(n)):console.log("False")}function s(){t("#linkRegister").fadeOut(500),t("#linkLogin").fadeOut(500),t("#linkLogout").fadeIn(500)}function c(){var t,e,o,a,i,l;for(t=n.getElementById("searchfront"),e=t.value.toUpperCase(),o=n.getElementById("effect-milo"),a=o.getElementsByTagName("location"),console.log(a),l=0;l<a.length;l++)i=a[l].getElementById("span")[0],console.log(i),console.log(a[l]+a),i&&(i.innerHTML.toUpperCase().indexOf(e)>-1?(a[l].style.display="",console.log(a[l])):(a[l].style.display="none",console.log(a[l])))}function r(){var t,e,o,a,i,l;for(t=n.getElementById("myInput"),e=t.value.toUpperCase(),o=n.getElementById("myTable"),a=o.getElementsByTagName("tr"),l=0;l<a.length;l++)i=a[l].getElementsByTagName("td")[0],i&&(i.innerHTML.toUpperCase().indexOf(e)>-1?a[l].style.display="":a[l].style.display="none")}function d(){var e=t("#inputpostimg").val(),n=t("#inputposttitel").val(),o=t("#inputpostdesc").val(),a=t("#inputpostlocation").val(),i={postimageurl:e,posttitel:n,postdesc:o,postloc:a};console.log(i),swal({title:"Event Created!",text:"Dear Techie, Event has been succesfully scheduled",imageUrl:"https://pixabay.com/get/e837b50a2ff5053ed1534705fb0938c9bd22ffd41cb1134695f9c07da2/computer-1245714_1920.jpg",imageWidth:400,imageHeight:200,animation:!1})}function u(){var t={username:"username",password:"password"};localStorage.setItem("credentials",JSON.stringify(t))}function h(){swal({title:"An input!",text:"Write something interesting:",type:"input",showCancelButton:!0,closeOnConfirm:!1,animation:"slide-from-top",inputPlaceholder:"Write something",inputPlaceholder:"Write something",inputPlaceholder:"Write something"},function(t){return t!==!1&&(""===t?(swal.showInputError("You need to write something!"),!1):void swal("Nice!","You wrote: "+t,"success"))})}var m=[];if(localStorage.sEvents){var p=localStorage.sEvents;m=JSON.parse(p)}t(function(){});for(var g=0;g<m.length;g++)t("#lblEvents").append('<tr><th scope="row"><h4>'+m[g].id+"</h4></th><td><h4>"+m[g].name+'</h4></td><td><i class="fa fa-trash" aria-hidden="true"></i></td></tr>');if(t("#postbtn").on("click",function(){var e=(new Date).getTime(),n=t("#inputpostimg").val(),o=t("#inputpostevent").val(),i=t("#inputpostdesc").val(),l=t("#inputpostlocation").val(),s="link";t("#lblEvents").append("<tr><td>"+o+"</td><td>"+l+"</td><td>"+e+"</td><td>"+s+'</td><td><i class="fa fa-trash" aria-hidden="true"></i></td></tr>'),a("wdw-calendar");var c={};c.id=(new Date).getTime(),c.imageUrl=n,c.postevent=o,c.PostDesc=i,c.sPostLocation=l,m.push(c);var r=JSON.stringify(m);localStorage.sEvents=r}),t("#lblEvents div").each(function(e){console.log(e+": "+t(this).text()),t(this).css}),t("#searchEvents").on("click",function(){var e=t("#searchfront").val(),n=e.split(" "),o=[];console.log(n);var a=JSON.parse(localStorage.events);n.forEach(function(t){var e=t;a.forEach(function(t){var n=t.name,a=(t.topic,t.level),i=t.speaker_organization;t.location;l(e,n,t,o),l(e,a,t,o),l(e,i,t,o)})}),console.log(o);var i=o.filter(function(t,e,n){return e==n.indexOf(t)});console.log(i),t("#event-listing").empty();var s=i.length/3;console.log("The base number is: "+s),i.forEach(function(e){var n=e.topic;console.log(i.length),console.log(e.name),t("#event-listing").append('            <div class="event-thirds" data-event-id="'+e.id+'">              <div>                <h1>'+e.name+"</h1>                <h2>"+n+"</h2>                <h5>"+e.date.day+"-"+e.date.month+"-"+e.date.year+"</h5>              </div>            </div>          ")})}),null==localStorage.events)console.log("localStorage.events is empty"),t.getJSON("assets/data/events.json").done(function(e){console.log(e);var n=JSON.stringify(e);localStorage.events=n,console.log("localStorage.events successfully populated");var o=localStorage.events,a=JSON.parse(o);a.forEach(function(e){if(a.indexOf(e)<=9){console.log("works");var n=e.topic;t("#event-listing").append('              <div class="event-thirds" data-event-id="'+e.id+'">                <div>                  <h1>'+e.name+"</h1>                  <h2>"+n+"</h2>                  <h5>"+e.date.day+"-"+e.date.month+"-"+e.date.year+"</h5>                </div>              </div>          ")}}),i()});else if(localStorage.events){console.log("localStorage.events has data");var f=localStorage.events,v=JSON.parse(f);v.forEach(function(e){if(v.indexOf(e)<=9){console.log("works");var n=e.topic;t("#event-listing").append('            <div class="event-thirds" data-event-id="'+e.id+'">              <div>                <h1>'+e.name+"</h1>                <h2>"+n+"</h2>                <h5>"+e.date.day+"-"+e.date.month+"-"+e.date.year+"</h5>              </div>            </div>        ")}}),i()}t(n).ready(function(){a("wdw-home"),t("#wdw-event-listing").fadeIn(500)}),t("#searchfront").keyup(function(){c()}),t("#myInput").keyup(function(){r()}),t(n).ready(function(){u()}),t("#loginbtn").on("click",function(){var e=JSON.parse(localStorage.getItem("credentials")),n=JSON.parse(localStorage.getItem("credentialsMember")),o=t("#inputusername").val(),i=t("#inputpassword").val();e.username===o&&e.password===i||n.username===o&&n.password===i?(console.log("Welcome Mr.   "+e.username),s(),t(".brand h1").text("HI "+e.username),swal("Welcome!","#Tekhus <3 Tech ","success"),a("wdw-index")):console.log("failed login")}),t("#memberbtn").on("click",function(){var e=t("#inputfnamereg").val(),n=t("#inputlnamereg").val(),o=t("#inputemailreg").val(),a=t("#inputlocationreg").val(),i=t("#inputusernamereg").val(),l=t("#inputpasswordreg").val(),s={fname:e,lname:n,email:o,location:a,usernam:i,password:l};localStorage.setItem("credentialsMember",JSON.stringify(s)),console.log("Local Storage store",s)}),t("#postbtn").on("click",function(){d(),console.log("post event")}),t("#linkLogin").on("click",function(){a("wdw-login"),console.log("Nav - login clicked")}),t("#linkHome").on("click",function(){a("wdw-home"),console.log("Nav - Home Clicked ")}),t("#linkEvents").on("click",function(){a("wdw-events"),console.log("Nav - Link Event")}),t("#linkCalendar").on("click",function(){a("wdw-calendar"),console.log("Nav - Calendar clicked")}),t("#linkAllEvents").on("click",function(){a("wdw-all-events"),console.log("Nav - all events click")}),t("#btnpostevent").on("click",function(){a("wdw-post-event"),console.log("Postclicke")}),t("#postnewevent").on("click",function(){a("wdw-post-event"),console.log("Post new event clicked ")}),m.indexOf(this),t(".fa-fa-trash").click(function(){console.log("Trashed clicked",m,m[g],m.length),m.splice(1,1)}),t("#registermember").on("click",function(){a("wdw-index"),console.log("manage-members clicked")}),t("#linkpartnere").on("click",function(){a("wdw-partnere"),console.log("partner link clicked ")}),t("#addmember").on("click",function(){console.log("added member"),a("wdw-register-member"),h()}),t(".fa-fa-trash").click(function(){t(this).parent().hide(),console.log("Trash delete clicked")}),t("#figure1").on("click",function(){swal({title:"Spark Summit ",html:'<div style="width: 100%"><iframe width="100%" height="600" src="https://www.mapsdirections.info/en/custom-google-maps/map.php?width=100%&height=600&hl=ru&q=San%20fransico+(Spark%20SUmmit%20)&ie=UTF8&t=&z=13&iwloc=A&output=embed" frameborder="0" scrolling="no" marginheight="0" marginwidth="0"><a href="https://www.mapsdirections.info/en/custom-google-maps/">Create a custom Google Map</a> by <a href="https://www.mapsdirections.info/en/">UK Maps</a></iframe></div><br />',showCloseButton:!0,showCancelButton:!0,confirmButtonText:'<i class="fa fa-thumbs-up"></i> Great!',cancelButtonText:'<i class="fa fa-thumbs-down"></i>'})}),t("#figure4").on("click",function(){swal({title:"Web Summit ",html:'<div style="width: 100%"><iframe width="100%" height="600" src="https://www.mapsdirections.info/en/custom-google-maps/map.php?width=100%&height=600&hl=ru&q=lisbon%20portugal+(Web%20Summit%20)&ie=UTF8&t=&z=14&iwloc=A&output=embed" frameborder="0" scrolling="no" marginheight="0" marginwidth="0"><a href="https://www.mapsdirections.info/en/custom-google-maps/">Create a custom Google Map</a> by <a href="https://www.mapsdirections.info/en/">UK Maps</a></iframe></div><br />',showCloseButton:!0,showCancelButton:!0,confirmButtonText:'<i class="fa fa-thumbs-up"></i> Great!',cancelButtonText:'<i class="fa fa-thumbs-down"></i>'})}),t("#figure2").on("click",function(){swal({title:"Big Data ",html:'<div style="width: 100%"><iframe width="100%" height="600" src="https://www.mapsdirections.info/en/custom-google-maps/map.php?width=100%&height=600&hl=ru&q=Toronto%20canada+(Web%20Summit%20)&ie=UTF8&t=&z=14&iwloc=A&output=embed" frameborder="0" scrolling="no" marginheight="0" marginwidth="0"><a href="https://www.mapsdirections.info/en/custom-google-maps/">Create a custom Google Map</a> by <a href="https://www.mapsdirections.info/en/">UK Maps</a></iframe></div><br />',showCloseButton:!0,showCancelButton:!0,confirmButtonText:'<i class="fa fa-thumbs-up"></i> Great!',cancelButtonText:'<i class="fa fa-thumbs-down"></i>'})})}(jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
